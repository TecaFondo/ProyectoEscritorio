package proyectokohlercarlos;


import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
import javax.swing.table.DefaultTableModel;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Carlos Kohler A.K.A TecaFondo
 */
public class EasyKeyGUI extends javax.swing.JFrame {
    private Usuario usr;
    /**
     * Creates new form encriptaGUI
     * @throws java.sql.SQLException
     */
    public EasyKeyGUI() throws SQLException {
        this.cn = cc.conexion();
        initComponents();
        mostrardatos("");
    }
    public EasyKeyGUI(Usuario usr) throws SQLException {
        this.usr=usr;
        this.cn = cc.conexion();
        initComponents();
        mostrardatos("");
    }
    void mostrardatos(String valor){// Metodo mostrardatos
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("ID");
        modelo.addColumn("Nombre");
        modelo.addColumn("Descripcion");
        modelo.addColumn("Clave");
        modelo.addColumn("MET");
        jTInfo.setModel(modelo);
        
        String sql="";
        if (valor.equals("")){
            sql="SELECT * FROM clave";
        }
        else{
                    System.out.println(valor);
            sql="SELECT * FROM clave WHERE ID='"+valor+"'";
        }
        
        String []datos = new String[5];
        try {
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while(rs.next() && rs.getString(6).equalsIgnoreCase(this.usr.getUsr())){
                datos[0]=rs.getString(1);
                datos[1]=rs.getString(2);
                datos[2]=rs.getString(3);
                datos[3]=rs.getString(4);
                datos[4]=rs.getString(5);
                modelo.addRow(datos);
            }
            jTInfo.setModel(modelo);
        } catch (SQLException ex) {
            Logger.getLogger(EasyKeyGUI.class.getName()).log(Level.SEVERE, null, ex);
            System.out.println("");
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popmActualizar2 = new javax.swing.JPopupMenu();
        menModificar2 = new javax.swing.JMenuItem();
        menEliminar = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jLClave = new javax.swing.JLabel();
        jLMetodo = new javax.swing.JLabel();
        jCBmetodos = new javax.swing.JComboBox();
        jBcifrar = new javax.swing.JButton();
        jLFinal = new javax.swing.JLabel();
        jFfinal = new javax.swing.JFormattedTextField();
        jButton1 = new javax.swing.JButton();
        jTpalabra = new javax.swing.JPasswordField();
        jLDescripcion = new javax.swing.JLabel();
        jTDescripcion = new javax.swing.JTextField();
        jLNombre = new javax.swing.JLabel();
        jTNombre = new javax.swing.JTextField();
        jLbid = new javax.swing.JScrollPane();
        jTInfo = new javax.swing.JTable();
        jBMos = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLid = new javax.swing.JTextField();
        jBdelete = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        menModificar2.setText("Modificar");
        menModificar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menModificar2ActionPerformed(evt);
            }
        });
        popmActualizar2.add(menModificar2);

        menEliminar.setText("Eliminar");
        menEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menEliminarActionPerformed(evt);
            }
        });
        popmActualizar2.add(menEliminar);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLClave.setText("Clave a cifrar *");

        jLMetodo.setText("Metodo de cifrado:");

        jCBmetodos.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "EZ", "EZ3" }));
        jCBmetodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBmetodosActionPerformed(evt);
            }
        });

        jBcifrar.setText("Cifrar");
        jBcifrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBcifrarActionPerformed(evt);
            }
        });

        jLFinal.setText("Palabra cifrada/descifrada");

        jButton1.setText("Descifrar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTpalabra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTpalabraActionPerformed(evt);
            }
        });

        jLDescripcion.setText("Descripcion (campo opcional)");

        jTDescripcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTDescripcionActionPerformed(evt);
            }
        });

        jLNombre.setText("Nombre Clave *");

        jTNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTNombreActionPerformed(evt);
            }
        });

        jTInfo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nombre", "Descripci√≥n", "Clave"
            }
        ));
        jLbid.setViewportView(jTInfo);

        jBMos.setText("Modificar");
        jBMos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBMosActionPerformed(evt);
            }
        });

        jLabel1.setText("ID (IRREPETIBLE)*");

        jBdelete.setText("Eliminar");
        jBdelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBdeleteActionPerformed(evt);
            }
        });

        jLabel2.setText("EasyKey v0.5.4 by Carlos Kohler @TecaFondo");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTDescripcion)
                    .addComponent(jTNombre)
                    .addComponent(jTpalabra)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLid, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(jCBmetodos, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(63, 63, 63)
                                .addComponent(jLMetodo)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 172, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jBcifrar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jBMos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jBdelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(72, 72, 72))
                    .addComponent(jFfinal, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLbid, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLClave)
                            .addComponent(jLFinal)
                            .addComponent(jLDescripcion))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLNombre)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addGap(13, 13, 13)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLNombre)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(jLClave)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTpalabra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(jLDescripcion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jBcifrar)
                            .addComponent(jBMos))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jBdelete)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLMetodo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCBmetodos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(31, 31, 31)
                .addComponent(jLFinal)
                .addGap(18, 18, 18)
                .addComponent(jFfinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLbid, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jBcifrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBcifrarActionPerformed
        // TODO add your handling code here:
        
        
        sape = "";
        jFfinal.setText(""); // elimina el contenido de jFfinal
        int largo=jTpalabra.getText().length(); // largo de la palabra/frase a cifrar
        int []ascii = new int [largo];// Esto es para separar las letras a cifrar
        char []caracteres = new char [largo];
        int []asciifinal = new int [largo];
        if(jCBmetodos.getSelectedItem().toString()=="EZ"){
        met = 1;//Metodo de cifrado EZ
        }
        else if(jCBmetodos.getSelectedItem().toString()=="EZ3"){
            met=2;//Metodo de cifrado EZ3
        }
        palabra = jTpalabra.getText();//toma la palabra del cuadro de texto
        for(int x = 0 ; x < palabra.length() ; x++){
            ascii[x] = palabra.codePointAt(x);   
        }
        
        if(jLid.getText().isEmpty()){ //Verifica si los campos obligatorios est√°n rellenos, si no es as√≠ se pide que se llenen
            JOptionPane.showMessageDialog(null, "Llene todos los campos obligatorios");
        }
        else if(jTNombre.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Llene todos los campos obligatorios");
        }
        else if(jTpalabra.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Llene todos los campos obligatorios");
        }
        
        else{
        for(int x = 0 ; x < largo ; x++){
            ascii[x] = palabra.codePointAt(x); //codigo ascii de cada letra
        }
            switch(met){
                case 1:{//Metodo 1 de cifrado (EZ)
                    for(int x = 0; x<largo;x++){
                        if(palabra.charAt(x)=='a'){
                            asciifinal[x]='z';
                        }
                        else if(palabra.charAt(x)=='b'){
                            asciifinal[x]='y';
                        }
                        else if(palabra.charAt(x)=='c'){
                            asciifinal[x]='x';
                        }
                        else if(palabra.charAt(x)=='d'){
                            asciifinal[x]='w';
                        }
                        else if(palabra.charAt(x)=='e'){
                            asciifinal[x]='v';
                        }
                        else if(palabra.charAt(x)=='f'){
                            asciifinal[x]='u';
                        }
                        else if(palabra.charAt(x)=='g'){
                            asciifinal[x]='t';
                        }
                        else if(palabra.charAt(x)=='h'){
                            asciifinal[x]='s';
                        }
                        else if(palabra.charAt(x)=='i'){
                            asciifinal[x]='r';
                        }
                        else if(palabra.charAt(x)=='j'){
                            asciifinal[x]='q';
                        }
                        else if(palabra.charAt(x)=='k'){
                            asciifinal[x]='p';
                        }
                        else if(palabra.charAt(x)=='l'){
                            asciifinal[x]='o';
                        }
                        else if(palabra.charAt(x)=='m'){
                            asciifinal[x]='√±';
                        }
                        else if(palabra.charAt(x)=='n'){
                            asciifinal[x]='n';
                        }
                        else if(palabra.charAt(x)=='√±'){
                            asciifinal[x]='m';
                        }
                        else if(palabra.charAt(x)=='o'){
                            asciifinal[x]='l';
                        }
                        else if(palabra.charAt(x)=='p'){
                            asciifinal[x]='k';
                        }
                        else if(palabra.charAt(x)=='q'){
                            asciifinal[x]='j';
                        }
                        else if(palabra.charAt(x)=='r'){
                            asciifinal[x]='i';
                        }
                        else if(palabra.charAt(x)=='s'){
                            asciifinal[x]='h';
                        }
                        else if(palabra.charAt(x)=='t'){
                            asciifinal[x]='g';
                        }
                        else if(palabra.charAt(x)=='u'){
                            asciifinal[x]='f';
                        }
                        else if(palabra.charAt(x)=='v'){
                            asciifinal[x]='e';
                        }
                        else if(palabra.charAt(x)=='w'){
                            asciifinal[x]='d';
                        }
                        else if(palabra.charAt(x)=='x'){
                            asciifinal[x]='c';
                        }
                        else if(palabra.charAt(x)=='y'){
                            asciifinal[x]='b';
                        }
                        else if(palabra.charAt(x)=='z'){
                            asciifinal[x]='a';
                        }
                        else if(palabra.charAt(x)=='A'){
                            asciifinal[x]='Z';
                        }
                        else if(palabra.charAt(x)=='B'){
                            asciifinal[x]='Y';
                        }
                        else if(palabra.charAt(x)=='C'){
                            asciifinal[x]='X';
                        }
                        else if(palabra.charAt(x)=='D'){
                            asciifinal[x]='W';
                        }
                        else if(palabra.charAt(x)=='E'){
                            asciifinal[x]='V';
                        }
                        else if(palabra.charAt(x)=='F'){
                            asciifinal[x]='U';
                        }
                        else if(palabra.charAt(x)=='G'){
                            asciifinal[x]='T';
                        }
                        else if(palabra.charAt(x)=='H'){
                            asciifinal[x]='S';
                        }
                        else if(palabra.charAt(x)=='I'){
                            asciifinal[x]='R';
                        }
                        else if(palabra.charAt(x)=='J'){
                            asciifinal[x]='Q';
                        }
                        else if(palabra.charAt(x)=='K'){
                            asciifinal[x]='P';
                        }
                        else if(palabra.charAt(x)=='L'){
                            asciifinal[x]='O';
                        }
                        else if(palabra.charAt(x)=='M'){
                            asciifinal[x]='√ë';
                        }
                        else if(palabra.charAt(x)=='N'){
                            asciifinal[x]='N';
                        }
                        else if(palabra.charAt(x)=='√ë'){
                            asciifinal[x]='M';
                        }
                        else if(palabra.charAt(x)=='O'){
                            asciifinal[x]='L';
                        }
                        else if(palabra.charAt(x)=='P'){
                            asciifinal[x]='K';
                        }
                        else if(palabra.charAt(x)=='Q'){
                            asciifinal[x]='J';
                        }
                        else if(palabra.charAt(x)=='R'){
                            asciifinal[x]='I';
                        }
                        else if(palabra.charAt(x)=='S'){
                            asciifinal[x]='H';
                        }
                        else if(palabra.charAt(x)=='T'){
                            asciifinal[x]='G';
                        }
                        else if(palabra.charAt(x)=='U'){
                            asciifinal[x]='F';
                        }
                        else if(palabra.charAt(x)=='V'){
                            asciifinal[x]='E';
                        }
                        else if(palabra.charAt(x)=='W'){
                            asciifinal[x]='D';
                        }
                        else if(palabra.charAt(x)=='X'){
                            asciifinal[x]='C';
                        }
                        else if(palabra.charAt(x)=='Y'){
                            asciifinal[x]='B';
                        }
                        else if(palabra.charAt(x)=='Z'){
                            asciifinal[x]='A';
                        }
                        else{
                            asciifinal[x]=palabra.charAt(x);
                        }
                        caracteres[x] = (char)asciifinal[x];
                        sape = sape + caracteres[x];
                        jFfinal.setText(sape);
                    }
                    
                    break;
                }
                case 2:{//Metodo 2 de cifrado.
                    jFfinal.setText("");
                    for(int x = 0 ; x < palabra.length() ; x++){
                       asciifinal[x] = ascii[x]+3;
                       if(asciifinal[x]>=127){
                           asciifinal[x]=asciifinal[x]-27;
                       }
                       caracteres[x] = (char)asciifinal[x];
                       
                    }
                    for(int x = 0 ; x < palabra.length() ; x++){
                        sape = sape + caracteres[x];
                        jFfinal.setText(sape);
                    }
                    
                    break;
                }
                
            }
            try{ //carga de datos a la base de datos
                PreparedStatement pst = cn.prepareStatement("INSERT INTO clave (ID,Nombre, Clave, Descripcion, MET, Usuario) VALUES (?,?,?,?,?,?)"); //estructura de carga
                pst.setString(1, jLid.getText());
                pst.setString(2, jTNombre.getText());
                pst.setString(4, jFfinal.getText());
                pst.setString(3, jTDescripcion.getText());
                pst.setInt(5, met);
                pst.setString(6, this.usr.getUsr());
                pst.execute();
                pst.executeUpdate();
                }
            catch (Exception e){
                }
            mostrardatos("");
        }
            
    }//GEN-LAST:event_jBcifrarActionPerformed

    private void jCBmetodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBmetodosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCBmetodosActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        //Descripta las palabras/fraces
        
        int fila = jTInfo.getSelectedRow();
        if (fila >= 0){
            jLid.setText(jTInfo.getValueAt(fila, 0).toString());
            jTNombre.setText(jTInfo.getValueAt(fila, 1).toString());
            jTpalabra.setText(jTInfo.getValueAt(fila, 3).toString());
            jTDescripcion.setText(jTInfo.getValueAt(fila, 2).toString());
            met= Integer.parseInt(jTInfo.getValueAt(fila, 4).toString());//Metodo de cifrado/descifrado
            System.out.println(met);
;
        }
        else{
            JOptionPane.showMessageDialog(null, "NO seleccion√≥ fila");
        }
        
        sape = "";
        jFfinal.setText("");
        int largo=jTpalabra.getText().length(); // Largo de la palabra/frase a cifrar
        int []ascii = new int [largo];// Esto es para separar las letras a cifrar en forma de caracteres
        char []caracteres = new char [largo];
        int []asciifinal = new int [largo];
        
        palabra = jTpalabra.getText();// Toma la contrase√±a del cuadro de texto oculto
        for(int x = 0 ; x < palabra.length() ; x++){
            ascii[x] = palabra.codePointAt(x);
            }
        
        for(int x = 0 ; x < largo ; x++){
            ascii[x] = palabra.codePointAt(x); //codigo ascii de cada letra
        }
            switch(met){
                case 1:{
                    for(int x = 0 ; x < palabra.length() ; x++){
                        if(palabra.charAt(x)=='a'){
                            asciifinal[x]='z';
                        }
                        else if(palabra.charAt(x)=='b'){
                            asciifinal[x]='y';
                        }
                        else if(palabra.charAt(x)=='c'){
                            asciifinal[x]='x';
                        }
                        else if(palabra.charAt(x)=='d'){
                            asciifinal[x]='w';
                        }
                        else if(palabra.charAt(x)=='e'){
                            asciifinal[x]='v';
                        }
                        else if(palabra.charAt(x)=='f'){
                            asciifinal[x]='u';
                        }
                        else if(palabra.charAt(x)=='g'){
                            asciifinal[x]='t';
                        }
                        else if(palabra.charAt(x)=='h'){
                            asciifinal[x]='s';
                        }
                        else if(palabra.charAt(x)=='i'){
                            asciifinal[x]='r';
                        }
                        else if(palabra.charAt(x)=='j'){
                            asciifinal[x]='q';
                        }
                        else if(palabra.charAt(x)=='k'){
                            asciifinal[x]='p';
                        }
                        else if(palabra.charAt(x)=='l'){
                            asciifinal[x]='o';
                        }
                        else if(palabra.charAt(x)=='m'){
                            asciifinal[x]='√±';
                        }
                        else if(palabra.charAt(x)=='n'){
                            asciifinal[x]='n';
                        }
                        else if(palabra.charAt(x)=='√±'){
                            asciifinal[x]='m';
                        }
                        else if(palabra.charAt(x)=='o'){
                            asciifinal[x]='l';
                        }
                        else if(palabra.charAt(x)=='p'){
                            asciifinal[x]='k';
                        }
                        else if(palabra.charAt(x)=='q'){
                            asciifinal[x]='j';
                        }
                        else if(palabra.charAt(x)=='r'){
                            asciifinal[x]='i';
                        }
                        else if(palabra.charAt(x)=='s'){
                            asciifinal[x]='h';
                        }
                        else if(palabra.charAt(x)=='t'){
                            asciifinal[x]='g';
                        }
                        else if(palabra.charAt(x)=='u'){
                            asciifinal[x]='f';
                        }
                        else if(palabra.charAt(x)=='v'){
                            asciifinal[x]='e';
                        }
                        else if(palabra.charAt(x)=='w'){
                            asciifinal[x]='d';
                        }
                        else if(palabra.charAt(x)=='x'){
                            asciifinal[x]='c';
                        }
                        else if(palabra.charAt(x)=='y'){
                            asciifinal[x]='b';
                        }
                        else if(palabra.charAt(x)=='z'){
                            asciifinal[x]='a';
                        }
                        else if(palabra.charAt(x)=='A'){
                            asciifinal[x]='Z';
                        }
                        else if(palabra.charAt(x)=='B'){
                            asciifinal[x]='Y';
                        }
                        else if(palabra.charAt(x)=='C'){
                            asciifinal[x]='X';
                        }
                        else if(palabra.charAt(x)=='D'){
                            asciifinal[x]='W';
                        }
                        else if(palabra.charAt(x)=='E'){
                            asciifinal[x]='V';
                        }
                        else if(palabra.charAt(x)=='F'){
                            asciifinal[x]='U';
                        }
                        else if(palabra.charAt(x)=='G'){
                            asciifinal[x]='T';
                        }
                        else if(palabra.charAt(x)=='H'){
                            asciifinal[x]='S';
                        }
                        else if(palabra.charAt(x)=='I'){
                            asciifinal[x]='R';
                        }
                        else if(palabra.charAt(x)=='J'){
                            asciifinal[x]='Q';
                        }
                        else if(palabra.charAt(x)=='K'){
                            asciifinal[x]='P';
                        }
                        else if(palabra.charAt(x)=='L'){
                            asciifinal[x]='O';
                        }
                        else if(palabra.charAt(x)=='M'){
                            asciifinal[x]='√ë';
                        }
                        else if(palabra.charAt(x)=='N'){
                            asciifinal[x]='N';
                        }
                        else if(palabra.charAt(x)=='√ë'){
                            asciifinal[x]='M';
                        }
                        else if(palabra.charAt(x)=='O'){
                            asciifinal[x]='L';
                        }
                        else if(palabra.charAt(x)=='P'){
                            asciifinal[x]='K';
                        }
                        else if(palabra.charAt(x)=='Q'){
                            asciifinal[x]='J';
                        }
                        else if(palabra.charAt(x)=='R'){
                            asciifinal[x]='I';
                        }
                        else if(palabra.charAt(x)=='S'){
                            asciifinal[x]='H';
                        }
                        else if(palabra.charAt(x)=='T'){
                            asciifinal[x]='G';
                        }
                        else if(palabra.charAt(x)=='U'){
                            asciifinal[x]='F';
                        }
                        else if(palabra.charAt(x)=='V'){
                            asciifinal[x]='E';
                        }
                        else if(palabra.charAt(x)=='W'){
                            asciifinal[x]='D';
                        }
                        else if(palabra.charAt(x)=='X'){
                            asciifinal[x]='C';
                        }
                        else if(palabra.charAt(x)=='Y'){
                            asciifinal[x]='B';
                        }
                        else if(palabra.charAt(x)=='Z'){
                            asciifinal[x]='A';
                        }
                        else{
                            asciifinal[x]=palabra.charAt(x);
                        }
                        caracteres[x] = (char)asciifinal[x];
                        sape = sape + caracteres[x];
                        jFfinal.setText(sape);
                    }
                    break;
                }
                case 2:{
                    jFfinal.setText("");
                    for(int x = 0 ; x < palabra.length() ; x++){
                       asciifinal[x] = ascii[x]-3;
                       caracteres[x] = (char)asciifinal[x];
                    }
                    for(int x = 0 ; x < palabra.length() ; x++){
                        sape = sape + caracteres[x];
                        jFfinal.setText(sape);
                    }
                    break;
                }
                
            }
        
        
            
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTpalabraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTpalabraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTpalabraActionPerformed

    private void jTDescripcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTDescripcionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTDescripcionActionPerformed

    private void jTNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTNombreActionPerformed
        // TODO add your handling code here:
        // Envia datos a sape
    }//GEN-LAST:event_jTNombreActionPerformed

    private void jBMosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBMosActionPerformed
        // TODO add your handling code here:
        
        int fila = jTInfo.getSelectedRow();
        if (fila >= 0){
            int response = JOptionPane.showConfirmDialog(null, "Este paso es irrevercible, se eliminar√°n los datos para realizar la modificaci√≥n", "Continuar",
            JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (response == JOptionPane.NO_OPTION) {
                
            } 
            else if (response == JOptionPane.YES_OPTION) {
                jLid.setText(jTInfo.getValueAt(fila, 0).toString());
            jTNombre.setText(jTInfo.getValueAt(fila, 1).toString());
            jTpalabra.setText(jTInfo.getValueAt(fila, 3).toString());
            jTDescripcion.setText(jTInfo.getValueAt(fila, 2).toString());
            String cod = "";
            cod = jTInfo.getValueAt(fila, 0).toString();
            try{
                PreparedStatement pst = cn.prepareStatement("DELETE FROM clave WHERE id='"+cod+"'");
                pst.executeUpdate();
                mostrardatos("");
            }
            catch (Exception e){

            }
            } else if (response == JOptionPane.CLOSED_OPTION) {
              System.out.println("JOptionPane closed");
    }
            
        }
        else{
            JOptionPane.showMessageDialog(null, "NO seleccion√≥ fila");
        }
    }//GEN-LAST:event_jBMosActionPerformed

    private void jBdeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBdeleteActionPerformed
        // TODO add your handling code here:
        int fila = jTInfo.getSelectedRow();
        if(fila>=0){
            int response = JOptionPane.showConfirmDialog(null, "El siguiente procedimiento es ireversible ¬ødesea eliminar el dato selecionado?", "Confirm",
            JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (response == JOptionPane.NO_OPTION) {
            }
            else if (response == JOptionPane.YES_OPTION) {
                String cod = "";
            cod = jTInfo.getValueAt(fila, 0).toString();
            try{
                PreparedStatement pst = cn.prepareStatement("DELETE FROM clave WHERE id='"+cod+"'");
                pst.executeUpdate();
                mostrardatos("");
            }
            catch (Exception e){

            }
            } 
            else if (response == JOptionPane.CLOSED_OPTION) {
              System.out.println("JOptionPane closed");
            }
            
        }
        else{
            JOptionPane.showMessageDialog(null, "NO seleccion√≥ fila");
        }
        
    }//GEN-LAST:event_jBdeleteActionPerformed

    private void menModificar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menModificar2ActionPerformed
        // TODO add your handling code here:
        int fila = jTInfo.getSelectedRow();
        if (fila >= 0){
            jLid.setText(jTInfo.getValueAt(fila, 0).toString());
            jTNombre.setText(jTInfo.getValueAt(fila, 1).toString());
            jTDescripcion.setText(jTInfo.getValueAt(fila, 2).toString());
            jTpalabra.setText(jTInfo.getValueAt(fila,3).toString());
        }
        else{
            JOptionPane.showMessageDialog(null, "NO seleccion√≥ fila");
        }
    }//GEN-LAST:event_menModificar2ActionPerformed

    private void menEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menEliminarActionPerformed
        // TODO add your handling code here:
        int fila = jTInfo.getSelectedRow();
        String cod = "";
        cod = jTInfo.getValueAt(fila, 0).toString();
        try{
            PreparedStatement pst = cn.prepareStatement("DELETE FROM empleados WHERE id='"+cod+"'");
            pst.executeUpdate();
            mostrardatos("");
        }
        catch (Exception e){

        }
    }//GEN-LAST:event_menEliminarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EasyKeyGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EasyKeyGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EasyKeyGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EasyKeyGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                EasyLogGUI lg1 = new EasyLogGUI();
                lg1.setVisible(true);
            }
        });
    }
    Boolean s = true;
    String palabra = "";
    int met = 0;
    String sape = "";
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBMos;
    private javax.swing.JButton jBcifrar;
    private javax.swing.JButton jBdelete;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox jCBmetodos;
    private javax.swing.JFormattedTextField jFfinal;
    private javax.swing.JLabel jLClave;
    private javax.swing.JLabel jLDescripcion;
    private javax.swing.JLabel jLFinal;
    private javax.swing.JLabel jLMetodo;
    private javax.swing.JLabel jLNombre;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jLbid;
    private javax.swing.JTextField jLid;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTDescripcion;
    private javax.swing.JTable jTInfo;
    private javax.swing.JTextField jTNombre;
    private javax.swing.JPasswordField jTpalabra;
    private javax.swing.JMenuItem menEliminar;
    private javax.swing.JMenuItem menModificar2;
    private javax.swing.JPopupMenu popmActualizar2;
    // End of variables declaration//GEN-END:variables
    conectar cc = new conectar();
    Connection cn= cc.conexion();
}
